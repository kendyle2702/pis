
services:
  ### DATABASE: PostgreSQL ###
  postgres:
    image: postgres:15-alpine
    container_name: postgres_container
    restart: always
    ports:
      - "5432:5432"
    environment:
        POSTGRES_USER: admin
        POSTGRES_PASSWORD: Password789
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/custom-scripts

    entrypoint: [ "/bin/bash", "-c", "/custom-scripts/init-db.sh & exec docker-entrypoint.sh postgres" ]

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d pis"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - springboot-network

  ### BACKEND: Spring Boot ###
  springboot:
    build: .
    container_name: springboot_container
    restart: always
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/pis
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: Password789
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - springboot-network

networks:
  springboot-network:

volumes:
  postgres_data:
